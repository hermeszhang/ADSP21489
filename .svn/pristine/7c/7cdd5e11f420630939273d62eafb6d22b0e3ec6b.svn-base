package com.skycaster.adsp21489.util;

import android.content.DialogInterface;
import android.support.v7.app.AlertDialog;
import android.text.TextUtils;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;

import com.skycaster.adsp21489.R;
import com.skycaster.adsp21489.activity.MainActivity;
import com.skycaster.skycaster21489.base.AdspActivity;
import com.skycaster.skycaster21489.excpt.BaudRateOutOfRangeException;
import com.skycaster.skycaster21489.excpt.FreqOutOfRangeException;
import com.skycaster.skycaster21489.excpt.TunerSettingException;
import com.skycaster.skycaster21489.utils.AdspRequestManager;

import project.SerialPort.SerialPortFinder;

/**
 * Created by 廖华凯 on 2017/3/21.
 */

public class AlertDialogUtil {
    private static AlertDialog mAlertDialog;
    private static String tempPath;
    private static int selectedPathIndex;
    private static int tempBaudRate;
    private static int selectedBaudRateIndex;
    private static int selectedIndex;

    public static void showSerialPortSelection(final AdspActivity activity){
        if(activity instanceof MainActivity){
            View rootView=View.inflate(activity, R.layout.set_sp_and_bd_layout,null);
            Spinner spn_serialPorts= (Spinner) rootView.findViewById(R.id.config_spin_sp_list);
            Spinner spn_baudRates= (Spinner) rootView.findViewById(R.id.config_spin_bd_rate_list);
            Button btn_confirm= (Button) rootView.findViewById(R.id.config_btn_confirm);
            Button btn_cancel= (Button) rootView.findViewById(R.id.config_btn_cancel);

            final String[] paths=new SerialPortFinder().getAllDevicesPath();
            if(paths.length>0){
                ArrayAdapter<String> serialPortAdapter = new ArrayAdapter<>(activity, android.R.layout.simple_spinner_item, paths);
                serialPortAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                spn_serialPorts.setAdapter(serialPortAdapter);
                tempPath=activity.getSerialPortPath();
                selectedPathIndex=0;
                if(!TextUtils.isEmpty(tempPath)){
                    for(int i=0;i<paths.length;i++){
                        if(tempPath.equals(paths[i])){
                            selectedPathIndex=i;
                            break;
                        }
                    }
                }
                spn_serialPorts.setSelection(selectedPathIndex);
                spn_serialPorts.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        selectedPathIndex=position;
                        tempPath=paths[selectedPathIndex];
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
            }else {
                activity.showSnackBar("无法获得打开串口的权限。");
            }

            final String[] baudRates = activity.getResources().getStringArray(R.array.baudrates_value);
            ArrayAdapter<String> baudRateAdapter = new ArrayAdapter<>(activity, android.R.layout.simple_spinner_item, baudRates);
            baudRateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
            spn_baudRates.setAdapter(baudRateAdapter);
            tempBaudRate=activity.getBaudRate();
            selectedBaudRateIndex=0;
            for(int i=0;i<baudRates.length;i++){
                if(tempBaudRate==Integer.parseInt(baudRates[i])){
                    selectedBaudRateIndex=i;
                    break;
                }
            }
            spn_baudRates.setSelection(selectedBaudRateIndex);
            spn_baudRates.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                @Override
                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                    selectedBaudRateIndex=position;
                    tempBaudRate=Integer.parseInt(baudRates[selectedBaudRateIndex]);
                }

                @Override
                public void onNothingSelected(AdapterView<?> parent) {

                }
            });

            btn_confirm.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    activity.openSerialPort(tempPath,tempBaudRate);
                    mAlertDialog.dismiss();
                }
            });

            btn_cancel.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    mAlertDialog.dismiss();
                }
            });

            AlertDialog.Builder builder=new AlertDialog.Builder(activity);
            mAlertDialog = builder.setView(rootView).create();
            mAlertDialog.show();
        }

    }

    public static void showSetBaudRateDialog(final AdspActivity context) {
        AlertDialog.Builder builder=new AlertDialog.Builder(context);
        int currentBaudRate=context.getBaudRate();
        final String[] baudRateList = context.getResources().getStringArray(R.array.baudrates_value);
        selectedIndex = 0;
        for(int i=0;i<baudRateList.length;i++){
            if(currentBaudRate==Integer.parseInt(baudRateList[i])){
                selectedIndex =i;
                break;
            }
        }
        mAlertDialog=builder.setTitle("设置波特率")
                .setCancelable(true)
                .setSingleChoiceItems(baudRateList, selectedIndex, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        selectedIndex=which;
                    }
                })
                .setPositiveButton("确定", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //是不是应该也同时修改本机的波特率呢？
                        try {
                            AdspRequestManager.getInstance(context).setBaudRate(Integer.valueOf(baudRateList[selectedIndex]));
                            mAlertDialog.dismiss();
                        } catch (BaudRateOutOfRangeException e) {
                            ToastUtil.showToast(e.getMessage());
                        }
                    }
                })
                .create();
        mAlertDialog.show();
    }

    public static void showSetFreqDialog(final AdspActivity context) {
        AlertDialog.Builder builder=new AlertDialog.Builder(context);
        LinearLayout rootView= (LinearLayout) View.inflate(context,R.layout.set_freq_layout,null);
        final EditText edt_inputFreq= (EditText) rootView.findViewById(R.id.set_freq_layout_edt_input_frequency);
        edt_inputFreq.setText(String.valueOf(context.getFreq()));
        edt_inputFreq.setSelection(edt_inputFreq.getText().toString().trim().length());
        Button btn_confirm= (Button) rootView.findViewById(R.id.set_freq_layout_btn_confirm);
        Button btn_cancel= (Button) rootView.findViewById(R.id.set_freq_layout_btn_cancel);
        btn_confirm.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String newFreq = edt_inputFreq.getText().toString().trim();
                if(TextUtils.isEmpty(newFreq)){
                    ToastUtil.showToast("请输入频率。");
                }else {
                    try {
                        AdspRequestManager.getInstance(context).setFreq(Integer.valueOf(newFreq));
                        mAlertDialog.dismiss();
                    } catch (FreqOutOfRangeException e) {
                        ToastUtil.showToast(e.getMessage());
                    }
                }
            }
        });
        btn_cancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mAlertDialog.dismiss();
            }
        });
        mAlertDialog=builder.setView(rootView).create();
        mAlertDialog.show();
    }

    public static void showSetTunesDialog(final AdspActivity context) {
        AlertDialog.Builder builder=new AlertDialog.Builder(context);
        LinearLayout rootView= (LinearLayout) View.inflate(context,R.layout.set_tunes_layout,null);
        final EditText edt_inputLeftTune= (EditText) rootView.findViewById(R.id.set_tunes_layout_edt_input_left_tune);
        edt_inputLeftTune.setText(String.valueOf(context.getLeftTune()));
        edt_inputLeftTune.setSelection(edt_inputLeftTune.getText().toString().trim().length());
        final EditText edt_inputRightTune= (EditText) rootView.findViewById(R.id.set_tunes_layout_edt_input_right_tune);
        edt_inputRightTune.setText(String.valueOf(context.getRightTune()));
        edt_inputRightTune.setSelection(edt_inputRightTune.getText().toString().trim().length());
        Button btn_confirm= (Button) rootView.findViewById(R.id.set_tunes_layout_btn_confirm);
        btn_confirm.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String string_leftTune=edt_inputLeftTune.getText().toString().trim();
                String string_rightTune=edt_inputRightTune.getText().toString().trim();
                if(TextUtils.isEmpty(string_leftTune)||TextUtils.isEmpty(string_rightTune)){
                    ToastUtil.showToast("请输入左频及右频参数。");
                }else {
                    try {
                        AdspRequestManager
                                .getInstance(context)
                                .setTunes(Integer.valueOf(string_leftTune),Integer.valueOf(string_rightTune));
                        mAlertDialog.dismiss();
                    } catch (TunerSettingException e) {
                        ToastUtil.showToast(e.getMessage());
                    }
                }
            }
        });
        Button btn_cancel= (Button) rootView.findViewById(R.id.set_tunes_layout_btn_cancel);
        btn_cancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mAlertDialog.dismiss();
            }
        });
        mAlertDialog=builder.setView(rootView).create();
        mAlertDialog.show();
    }
}
